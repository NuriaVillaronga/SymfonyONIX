security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    role_hierarchy:
        ROLE_USER: []
        ROLE_ADMIN: [ 'ROLE_USER' ] #Role Admin va a tener las caracteristicas de role user, mas otras a mayores

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email  #--- Solo entra por el loadUserByUsername() cuando property est√° comentado

        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern:   ^/
            provider: app_user_provider
            user_checker: App\Security\UserChecker
            form_login:
                # "login" is the name of the route created previously
                login_path: /login
                check_path: /login
                default_target_path: /
                username_parameter: email
                password_parameter: password
            logout:
                path: app_logout
                target: /login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/create, roles: ROLE_ADMIN }
        - { path: ^/delete, roles: ROLE_ADMIN }
        - { path: ^/, roles: ROLE_USER }